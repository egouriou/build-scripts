#!/usr/bin/env zsh
#
# Build the riscv-gnu-toolchain for macOS.
#
# USAGE
#  /scratch/projects/build-scripts/riscv-gnu-toolchain-build \
#      /Volumes/case-insensitive/projects/riscv-gnu-toolchain \
#      /scratch/install/riscv-gnu-toolchain
#
#  /scratch/projects/build-scripts/riscv-gnu-toolchain-build \
#      /Volumes/case-insensitive/projects/riscv-gnu-toolchain \
#      /riscv/riscv-gnu-toolchain
#
#
# DEPENDENCIES
#  macOS from Homebrew:
#   % brew install python3 gawk gnu-sed gmp mpfr libmpc isl zlib expat texinfo flock make autoconf m4 bison
#   % cd $(brew --prefix m4)/bin && ln -s m4 gm4
#   % cd $(brew --prefix make)/libexec/gnubin && ln -s ../../bin/gmake gnumake
#
# linux from Apt
#   % sudo apt-get install \
#         autoconf automake autotools-dev curl python3 python3-pip libmpc-dev \
#         libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf \
#         libtool patchutils bc zlib1g-dev libexpat-dev ninja-build git \
#         cmake libglib2.0-dev

# Reset options to defaults
emulate -L zsh
set -o errexit  # Exit on failure
set -o xtrace  # Print commands ON

fail() {
    local message=${1:-No error message provided}
    echo ${message} >&2
    exit 1
}

os-name() {
    local uname=$(uname -s)
    case ${uname} in
        Linux*)     echo linux;;
        Darwin*)    echo macos;;
        *)          fail "Unknown OS '${uname}'}"
    esac
}

default-dirpath() {
    case $(os-name) in
        linux) echo "/scratch/projects/riscv-gnu-toolchain";;
        macos) echo "/Volumes/case-sensitive/projects/riscv-gnu-toolchain";;
        *)     fail "Unknown os-name!?";;
     esac
}

#
REPO_DIRPATH=${1:-$(default-dirpath)}

INSTALL_DIRPATH=${2:-/scratch/install/riscv-gnu-toolchain}
#INSTALL_DIRPATH=${2:-/riscv/riscv-gnu-toolchain}

# Increase open files limit (from default 256)
ulimit -n 2048

#
echo "---- Building riscv-gnu-toolchain in repo '${REPO_DIRPATH}' ----"
cd ${REPO_DIRPATH}

# Ensure modules are updated
# echo "-- Updating submodules --"
# git submodule update --init --recursive

# PATH customization
#  - Have gmake from Brew's make install.
#    Create "gnumake" in $(brew --prefix make)/libexec/gnubin that points to gmake
#  - m4 from Homebrew's m4 (not installed in brew's bin)
#    Do we need to create a 'gm4' to point to m4? Yes
#  - bison from Homebrew to override the system's old bison
export PATH="$(brew --prefix make)/libexec/gnubin:$(brew --prefix m4)/bin:$(brew --prefix bison)/bin:${PATH}"

# Include path: add gmp, ... ?
export CPATH="$(brew --prefix)/include:${CPATH}"
# Link path: add gmp, libbison, ...
export LIBRARY_PATH="$(brew --prefix)/lib"

#
# echo "-- Clean --"
# gmake clean

# Configure
echo "-- Configure --"
./configure \
    --prefix=${INSTALL_DIRPATH} \
    --enable-multilib

# Build
echo "-- Build -- "
# NOTE(2023-08 ego): I had some issues with parallel builds, and got things
# working with single builds but did not 
gmake # -j 10 
gmake linux

# Install
echo "-- Install --"
gmake install




